class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        //int search(vector<int>& nums, int target, int start, int end);
        return search(nums, target, 0, nums.size()-1);
    }
    
    int search(vector<int>& nums, int target, int start, int end){
        int middle = (start+end)/2;
        if(nums[middle] == target)  return middle;
        
        //To make the logic easier, force output at one condition, and enumerate all possibilities.
        else if(start == end){
            if(middle==0 && nums[middle]>target)    return 0;
            else{
                if(nums[middle] > target)   return middle;
                else    return middle+1;
            }
        }
        
        else if(nums[middle] > target)  return search(nums, target, start, middle-1<start ? start : middle-1);
        else if(nums[middle] < target)  return search(nums, target, middle+1, end);
    }
};
